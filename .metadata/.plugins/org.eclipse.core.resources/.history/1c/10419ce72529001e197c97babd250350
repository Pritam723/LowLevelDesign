package MainGame;

import java.util.Deque;
import java.util.LinkedList;
import java.util.List;

import Model.Player;
import Model.PlayingPieceO;
import Model.PlayingPieceX;
import Model.Board;
import Model.Pair;

public class GameTTT {
	Deque<Player> players;
	Board gameBoard;
	
	public GameTTT() {
		initializeGame();
	}
	
	private void initializeGame() {
		players = new LinkedList<>();
		PlayingPieceX crossPiece = new PlayingPieceX();
		PlayingPieceO noughtsPiece = new PlayingPieceO();
		
		Player player1 = new Player("1","Ram",crossPiece);
		Player player2 = new Player("2","Laxman",noughtsPiece);
		
		players.add(player1);
		players.add(player2);
		
		gameBoard = new Board(3);

	}
	
	public String startGame() {
		boolean noWinner = true;
		while(noWinner) {
			Player playerTurn = players.removeFirst();
		
			// So, one scenario is, if there is no free space left, We break 7 return tie.
			
			List<Pair> freeSpaces = gameBoard.getFreeSpaces();
			if(freeSpaces.isEmpty()) {
				break;
			}
		}
		
		return("It's a Tie);
		
	}
}
